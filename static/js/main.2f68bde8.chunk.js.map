{"version":3,"sources":["components/Flights/Flights.js","components/SearchBar/SearchBar.js","components/FlightList/FlightList.js","App.js","reportWebVitals.js","index.js"],"names":["Flights","data","Quotes","Carriers","Places","className","map","result","MinPrice","Name","CityName","SearchBar","props","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","console","log","fetch","state","currency","originPlace","destinationPlace","outboundPartialDate","inboundPartialDate","then","response","json","Currencies","catch","err","error","sortBy","handleSearch","bind","event","this","searchSkyScanner","sortByOption","renderSortByOptions","onSubmit","placeholder","onChange","React","Component","FlightList","flights","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TA8BeA,EAtBC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAClC,OACE,sBAAKC,UAAU,iBAAf,UACGJ,GAAOC,EAAOI,KAAI,SAAAC,GACjB,OAAO,iDAAoBA,EAAOC,eAElCP,GAAOE,EAASG,KAAI,SAAAC,GACpB,OAAO,mDAAsBA,EAAOE,WAEpCR,GAAOG,EAAOE,KAAI,SAAAC,GAClB,OAAQ,gCACR,wCAAWA,EAAOE,QAClB,6CAAgBF,EAAOG,sBCmHtBC,G,uDA7HX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA+CVC,aAAa,SAACC,EAAGC,GACb,IAAMC,EAAQF,EAAEG,OAAOD,MACvB,EAAKE,SAAL,eAAgBJ,EAAEG,OAAOF,KAAMC,KAlDhB,EAyDnBG,aAAa,SAACL,GACVA,EAAEM,iBACFC,QAAQC,IAAI,QAGZC,MAAM,kGAAD,OAAmG,EAAKC,MAAMC,SAA9G,kBAAgI,EAAKD,MAAME,YAA3I,YAA0J,EAAKF,MAAMG,iBAArK,YAAyL,EAAKH,MAAMI,oBAApM,+BAA8O,EAAKJ,MAAMK,oBAAsB,CAChR,OAAU,MACV,QAAW,CACP,iBAAkB,qDAClB,kBAAmB,2DAG1BC,MAAK,SAAAC,GACF,OAAOA,EAASC,UACjBF,MAAK,SAAAC,GACJ,EAAKb,SAAS,CAAChB,OAAQ6B,EAAS7B,OAAQD,KAAM8B,EAAU5B,SAAU4B,EAAS5B,SAAUC,OAAQ2B,EAAS3B,OAAQ6B,WAAYF,EAASE,aACnIZ,QAAQC,IAAIS,EAAS7B,OAAQ6B,EAAS,OAEzCG,OAAM,SAAAC,GACHd,QAAQe,MAAMD,OA1ElB,EAAKX,MAAQ,CACTvB,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACR6B,WAAY,GAEZR,SAAU,GAEVC,YAAa,GACbC,iBAAkB,GAClBC,oBAAqB,GACrBC,mBAAoB,GACrBQ,OAAQ,YAGX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAlBL,E,gDA2CnB,SAAaC,GACTC,KAAK7B,MAAM8B,iBAAiBD,KAAKjB,MAAMa,QACvCG,EAAMpB,mB,4BAqCV,SAAeuB,GACX,OAAIA,IAAiBF,KAAKjB,MAAMa,OACrB,SAEJ,K,gCAIX,SAAmBM,GACfF,KAAKvB,SAAS,CAAEmB,OAAQM,M,oBAK5B,WAAU,IAAD,SACgDF,KAAKjB,MAAnDvB,EADF,EACEA,KAAMC,EADR,EACQA,OAAQC,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,OAAQ6B,EADlC,EACkCA,WACvC,OACI,sBAAK5B,UAAU,YAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,6BACE,6BAAKoC,KAAKG,0BAGhB,qBAAKvC,UAAU,mBAAf,SACI,uBAAMwC,SAAUJ,KAAKtB,aAArB,UACF,uBAAO2B,YAAY,uBAAuB/B,KAAK,cAAagC,SAAU,SAACjC,GAAD,OAAK,EAAKD,aAAaC,EAAE,kBAC/F,uBAAOgC,YAAY,+BAA+B/B,KAAK,mBAAmBgC,SAAU,SAACjC,GAAD,OAAK,EAAKD,aAAaC,EAAE,uBAC7G,uBAAOgC,YAAY,gBAAgB/B,KAAK,sBAAsBgC,SAAU,SAACjC,GAAD,OAAK,EAAKD,aAAaC,EAAE,0BACjG,uBAAOgC,YAAY,eAAe/B,KAAK,qBAAqBgC,SAAU,SAACjC,GAAD,OAAK,EAAKD,aAAaC,EAAE,yBAC/F,uBAAOgC,YAAY,WAAW/B,KAAK,WAAWgC,SAAU,SAACjC,GAAD,OAAK,EAAKD,aAAaC,EAAE,eACjF,wDAGDb,GAAM,cAAC,EAAD,CAASA,KAAMA,EAAMC,OAAQA,EAAQC,SAAUA,EAAUC,OAAQA,EAAQ6B,WAAYA,W,GApHpFe,IAAMC,YCgBfC,G,kKAbX,WACI,OACI,sBAAK7C,UAAU,aAAf,cACIoC,KAAK7B,MAAMuC,QAAQ7C,KAAI,SAAA6C,GACnB,OAAO,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQC,c,GALxBJ,IAAMC,YCwBhBI,E,kDA1Bb,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACX2B,QAAS,IAHM,E,0CAanB,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,sCACA,cAAC,EAAD,CAAWqC,iBAAkBD,KAAKC,mBAClC,cAAC,EAAD,CAAYS,QAASV,KAAKjB,MAAM2B,iB,GAnBtBH,IAAMC,WCITK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2f68bde8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Flights.css';\r\n\r\n/**\r\n * The purpose of the Flights component is to represent how a flight result in the Skye app will be formatted and styled.\r\n * \r\n */\r\n\r\nconst Flights = ({data, Quotes, Carriers, Places}) => {\r\n        return (\r\n          <div className=\"FLIGHT RESULTS\">\r\n            {data&& Quotes.map(result =>{\r\n              return <h2>Minimum Price: {result.MinPrice}</h2>\r\n            })}\r\n             {data&& Carriers.map(result =>{\r\n              return <h2>Airline Carrier: {result.Name}</h2>\r\n            })}\r\n             {data&& Places.map(result =>{\r\n              return (<div> \r\n              <h2>Name: {result.Name}</h2> \r\n              <h2>City Name: {result.CityName}</h2>\r\n              </div>\r\n              )\r\n            })} \r\n          </div>\r\n        )    \r\n}\r\n\r\n\r\n\r\nexport default Flights;","import React from 'react';\r\nimport Flights from '../Flights/Flights';\r\nimport './SearchBar.css';\r\n\r\n/**\r\n * The purpose of the searchBar component is to search for flights in the Skye App.\r\n * \r\n */\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            Quotes: [],\r\n            Carriers: [],\r\n            Places: [],\r\n            Currencies: [],\r\n            // country: 'US',\r\n            currency: '',\r\n            // locale: 'en-US',\r\n            originPlace: '',\r\n            destinationPlace: '',\r\n            outboundPartialDate: '',\r\n            inboundPartialDate: '',\r\n           sortBy: 'MinPrice',\r\n        };\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n\r\n/**\r\n * \r\n *(UNFINISHED PART OF THE PROJECT)\r\n */\r\n    // const sortByOptions = {\r\n    //     'Cheapest to Highest Priced': 'MinPrice', \r\n    // }:\r\n\r\n\r\n/**\r\n * (UNFINISHED PART OF THE PROJECT)\r\n * The purpose of the renderSortByOptions() is to dynamically create the list items needed to display the sort options (Minimum Price).\r\n */\r\n    // renderSortByOptions() {\r\n    //     return Object.keys(sortByOptions).map(sortByOption => {\r\n    //         let sortByOptionValue = sortByOptions[sortByOption];\r\n    //         return <li key={sortByOptionValue} onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)}>{sortByOption}</li>;\r\n    //     });\r\n    // }\r\n\r\n\r\n    handleSearch(event) {\r\n        this.props.searchSkyScanner(this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange=(e, name) =>{\r\n        const value = e.target.value;\r\n        this.setState({[e.target.name]:value})\r\n        // console.log(this.country, this.currency, this.locale, this.originPlace, this.destinationPlace, this.outboundPartialDate, this.inboundPartialDate)\r\n\r\n    } \r\n\r\n \r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        console.log('test')\r\n\r\n        \r\n        fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/${this.state.currency}/en-US/${this.state.originPlace}/${this.state.destinationPlace}/${this.state.outboundPartialDate}?inboundpartialdate=${this.state.inboundPartialDate}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"f4ab23d298msh2e33345ec3d505cp126e14jsnbf36cf8d1fa6\",\r\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\"\r\n            }\r\n        })\r\n        .then(response => {\r\n            return response.json()\r\n        }).then(response => {\r\n            this.setState({Quotes: response.Quotes, data: response, Carriers: response.Carriers, Places: response.Places, Currencies: response.Currencies})\r\n            console.log(response.Quotes, response[0])\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getSortByClass(sortByOption) {\r\n        if (sortByOption === this.state.sortBy) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({ sortBy: sortByOption });\r\n    }\r\n\r\n   \r\n    \r\n    render() {\r\n        const {data, Quotes, Carriers, Places, Currencies} = this.state\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                      <li>{this.renderSortByOptions}</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\" >\r\n                    <form onSubmit={this.handleSubmit}>\r\n                  <input placeholder=\"Origin (E.G JFK-sky)\" name='originPlace'onChange={(e)=>this.handleChange(e,'originPlace')}/>\r\n                  <input placeholder=\"Destination (E.G SFO-sky)git\" name='destinationPlace' onChange={(e)=>this.handleChange(e,'destinationPlace')}/>\r\n                  <input placeholder=\"Outbound Date\" name='outboundPartialDate' onChange={(e)=>this.handleChange(e,'outboundPartialDate')}/>\r\n                  <input placeholder=\"Inbound Date\" name='inboundPartialDate' onChange={(e)=>this.handleChange(e,'inboundPartialdate')}/>\r\n                  <input placeholder=\"Currency\" name='currency' onChange={(e)=>this.handleChange(e,'currency')}/>\r\n                  <button >Search Flight</button>\r\n                  </form>\r\n                </div>\r\n                {data&&<Flights data={data} Quotes={Quotes} Carriers={Carriers} Places={Places} Currencies={Currencies}></Flights>}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default SearchBar;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './FlightList.css';\r\nimport Flights from '../Flights/Flights.js';\r\n\r\n/**\r\n * The purpose of the FlightList component is to simulate what a returned list of flights would look like in the Skye app (after querying the SkyScanner API, for example).\r\n * \r\n * To help this simulation, the FlightList will make use of the Flights component repeatedly.\r\n */\r\n\r\n\r\nclass FlightList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"FlightList\"> {\r\n                this.props.flights.map(flights => {\r\n                    return <Flights key={flights.id} flights={flights} />\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FlightList;","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport './components/SearchBar/SearchBar.css';\nimport FlightList from './components/FlightList/FlightList';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flights: [],\n    };\n  }\n\n  // searchSkyScanner(sortBy) {                       //term, price, \n  //   SkyScanner.searchSkyScanner(sortBy).then((Flights) => {ynforbangyn\n  //     this.setState({ flights: flights });\n  //   });\n\n  // }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>SKYE</h1>\n        <SearchBar searchSkyScanner={this.searchSkyScanner} />\n        <FlightList flights={this.state.flights}/>\n        \n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}